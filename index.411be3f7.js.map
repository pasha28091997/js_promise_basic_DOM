{"mappings":"ACEA,IAAM,EAAW,IAAI,QAAQ,SAAC,CAA9B,EACE,IAAM,EAAO,SAAS,aAAa,CAAC,SAEhC,EACF,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,wBACV,GAGA,QAAQ,KAAK,CAAC,sCAElB,GAGM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAG,CAAjC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAEA,SAAS,EAAW,CAAI,EAAE,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,EAAA,SAAA,CAAA,EAAA,CAClB,EAAa,SAAS,aAAa,CAAC,MAE1C,CAAA,EAAW,SAAS,CAAG,UAEnB,GACF,EAAW,SAAS,CAAC,GAAG,CAAC,iBAE3B,EAAW,WAAW,CAAG,EACzB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAW,EACb,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAW,EAAO,CAAA,EACpB,GAEF,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAW,EACb,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAW,EAAO,CAAA,EACpB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar promise1 = new Promise(function(resolve) {\n    var logo = document.querySelector(\".logo\");\n    if (logo) logo.addEventListener(\"click\", function() {\n        resolve(\"Promise was resolved!\");\n    });\n    else // eslint-disable-next-line no-console\n    console.error(\".logo element not found in the DOM.\");\n});\n// eslint-disable-next-line promise/param-names, no-unused-vars\nvar promise2 = new Promise(function(_, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\nfunction addMessage(text) {\n    var isError = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n    var messageDiv = document.createElement(\"div\");\n    messageDiv.className = \"message\";\n    if (isError) messageDiv.classList.add(\"error-message\");\n    messageDiv.textContent = text;\n    document.body.appendChild(messageDiv);\n}\npromise1.then(function(message) {\n    addMessage(message);\n}).catch(function(error) {\n    addMessage(error, true);\n});\npromise2.then(function(message) {\n    addMessage(message);\n}).catch(function(error) {\n    addMessage(error, true);\n});\n\n//# sourceMappingURL=index.411be3f7.js.map\n","'use strict';\n\nconst promise1 = new Promise((resolve) => {\n  const logo = document.querySelector('.logo');\n\n  if (logo) {\n    logo.addEventListener('click', () => {\n      resolve('Promise was resolved!');\n    });\n  } else {\n    // eslint-disable-next-line no-console\n    console.error('.logo element not found in the DOM.');\n  }\n});\n\n// eslint-disable-next-line promise/param-names, no-unused-vars\nconst promise2 = new Promise((_, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\nfunction addMessage(text, isError = false) {\n  const messageDiv = document.createElement('div');\n\n  messageDiv.className = 'message';\n\n  if (isError) {\n    messageDiv.classList.add('error-message');\n  }\n  messageDiv.textContent = text;\n  document.body.appendChild(messageDiv);\n}\n\npromise1\n  .then((message) => {\n    addMessage(message);\n  })\n  .catch((error) => {\n    addMessage(error, true);\n  });\n\npromise2\n  .then((message) => {\n    addMessage(message);\n  })\n  .catch((error) => {\n    addMessage(error, true);\n  });\n"],"names":["promise1","Promise","resolve","logo","document","querySelector","addEventListener","console","error","promise2","_","reject","setTimeout","Error","addMessage","text","isError","arguments","length","messageDiv","createElement","className","classList","add","textContent","body","appendChild","then","message","catch"],"version":3,"file":"index.411be3f7.js.map"}